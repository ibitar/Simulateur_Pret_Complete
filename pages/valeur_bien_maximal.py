import streamlit as st
import numpy as np
import pandas as pd
from fpdf import FPDF
import tempfile

# Configuration de la page
st.set_page_config(page_title="Valeur maximale du bien", layout="wide", initial_sidebar_state="expanded")

# --- Pied de page / Informations version ---
st.sidebar.markdown("---")
st.sidebar.caption("üõ†Ô∏è D√©velopp√© par **I. Bitar**")
st.sidebar.caption("üìÖ Derni√®re mise √† jour : **15 ao√ªt 2025**")
st.sidebar.caption("üî¢ Version : **v1.2.0**")

st.markdown("---")
st.caption("üõ†Ô∏è D√©velopp√© par **I. Bitar** ¬∑ üìÖ Derni√®re mise √† jour : **15 ao√ªt 2025** ¬∑ üî¢ Version : **v1.2.0**")

st.title("Valeur maximale du bien immobilier")

st.markdown(
    """
    Cette page estime la **valeur maximale du bien immobilier** que vous pouvez acheter
    en fonction d'une mensualit√© cible, d'une dur√©e de pr√™t, d'un taux d'int√©r√™t et d'un apport initial.
    Les frais de notaire sont estim√©s selon le type de bien :
    - **Neuf** : 2 % du prix du bien
    - **Ancien** : 7.5 % du prix du bien
    """
)

with st.form("max_property_form"):
    monthly_payment = st.number_input("Mensualit√© maximale souhait√©e (‚Ç¨)", min_value=1.0, value=1500.0, step=50.0)
    years = st.number_input("Dur√©e du pr√™t (ann√©es)", min_value=1, value=20, step=1)
    interest_rate = st.number_input("Taux d'int√©r√™t (%)", min_value=0.0, value=3.0, step=0.1, format="%.2f")
    down_payment = st.number_input("Apport personnel (‚Ç¨)", min_value=0.0, value=30000.0, step=5000.0)
    property_type = st.radio("Type de bien", ["Neuf", "Ancien"], horizontal=True)
    submitted = st.form_submit_button("Calculer")

if submitted:
    notary_rates = {"Neuf": 2.0, "Ancien": 7.5}
    notary_rate = notary_rates[property_type]
    months = years * 12
    r = interest_rate / 100 / 12
    if r > 0:
        loan_amount = monthly_payment * ((1 + r) ** months - 1) / (r * (1 + r) ** months)
    else:
        loan_amount = monthly_payment * months
    property_value = (loan_amount + down_payment) / (1 + notary_rate / 100)
    notary_fees = property_value * notary_rate / 100
    project_cost = property_value + notary_fees

    st.subheader("R√©sultats")
    st.write(f"- **Valeur maximale du bien :** {property_value:,.2f} ‚Ç¨")
    st.write(f"- **Frais de notaire ({notary_rate} %) :** {notary_fees:,.2f} ‚Ç¨")
    st.write(f"- **Co√ªt total du projet :** {project_cost:,.2f} ‚Ç¨")
    st.write(f"- **Montant emprunt√© :** {loan_amount:,.2f} ‚Ç¨")

    data = {
        "√âl√©ment": ["Valeur du bien", "Frais de notaire", "Apport", "Montant emprunt√©"],
        "Montant (‚Ç¨)": [property_value, notary_fees, down_payment, loan_amount],
    }
    df = pd.DataFrame(data)
    st.bar_chart(df.set_index("√âl√©ment"))
    st.dataframe(df.style.format({"Montant (‚Ç¨)": "{:.2f}"}))

    pdf = FPDF()
    if hasattr(pdf, "set_doc_option"):
        pdf.set_doc_option("core_fonts_encoding", "utf-8")
        euro_symbol = "‚Ç¨"
    else:
        euro_symbol = "EUR"
    pdf.add_page()
    pdf.set_font("Arial", size=12)
    pdf.cell(0, 10, "Rapport de simulation", ln=True)
    pdf.cell(0, 10, f"Mensualit√© maximale : {monthly_payment:.2f} {euro_symbol}", ln=True)
    pdf.cell(0, 10, f"Dur√©e du pr√™t : {years} ans", ln=True)
    pdf.cell(0, 10, f"Taux d'int√©r√™t : {interest_rate:.2f} %", ln=True)
    pdf.cell(0, 10, f"Apport personnel : {down_payment:.2f} {euro_symbol}", ln=True)
    pdf.cell(0, 10, f"Type de bien : {property_type}", ln=True)
    pdf.ln(5)
    pdf.cell(0, 10, f"Valeur maximale du bien : {property_value:,.2f} {euro_symbol}", ln=True)
    pdf.cell(0, 10, f"Frais de notaire : {notary_fees:,.2f} {euro_symbol}", ln=True)
    pdf.cell(0, 10, f"Co√ªt total du projet : {project_cost:,.2f} {euro_symbol}", ln=True)
    pdf.cell(0, 10, f"Montant emprunt√© : {loan_amount:,.2f} {euro_symbol}", ln=True)

    with tempfile.NamedTemporaryFile(delete=False, suffix=".pdf") as tmp:
        pdf.output(tmp.name)
        tmp.seek(0)
        pdf_bytes = tmp.read()

    st.download_button(
        label="T√©l√©charger le rapport PDF",
        data=pdf_bytes,
        file_name="valeur_bien_maximale.pdf",
        mime="application/pdf",
    )
